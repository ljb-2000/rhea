.row
  .col-md-8
    .pull-left
      = form_tag commands_path, method: 'GET', class: 'form-inline' do
        .form-group
          = label_tag :image, 'Image', style: 'margin-right: 5px; font-size: 13px;'
          - image_options = [['All', nil]] + @images.map { |image| [humanize_image(image), image] }
          = select_tag :image, options_for_select(image_options, params[:image].presence), class: 'form-control', onchange: "$(this).closest('form').submit();"
    .pull-right
      = form_tag import_commands_path, method: 'PUT', multipart: true, style: 'display: inline-block;' do
        %span.btn.btn-default.btn-file
          Import
          = file_field_tag :data, accept: 'application/json', onchange: "$(this).closest('form').submit();"
      = link_to 'Export', export_commands_path(format: 'json'), class: 'btn btn-default'
    - if @commands.present?
      = form_tag batch_update_commands_path, method: 'POST' do
        = hidden_field_tag :redirect_to, request.fullpath
        = render partial: 'rhea/commands/table', locals: { commands: @commands }
    - else
      %p No commands found.

  .col-md-4
    .panel.panel-default
      .panel-heading
        %h4 New Command
      .panel-body
        = render partial: 'rhea/commands/form'

:javascript
  var checkboxes = $('.command-checkbox');
  var batchActions = $('.batch-actions');

  var toggleBatchActions = function() {
    batchActions.toggle(checkboxes.filter(':checked').length > 0);
    return true;
  };

  var updateCommandSyntax = function() {
    var syntax = this.selectedOptions[0].dataset.syntax;
    $('.command-syntax').text(syntax);
  };

  checkboxes.on('click', toggleBatchActions);

  $('#check-all').change(function(){
    $(".command-checkbox").prop('checked', $(this).prop("checked"));
    toggleBatchActions()
  });

  $('#command_type_key').on('change', updateCommandSyntax);
